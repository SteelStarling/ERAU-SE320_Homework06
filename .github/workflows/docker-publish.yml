# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# Slightly modified by Tay Hancock
# Based further on Wolf Paulus's example code (https://github.com/wolfpaulus/wordgame/blob/main/.github/workflows/docker-publish.yml)

name: docker-publish

on:
  workflow_run:
    workflows: [run-tests]
    types:
      - completed

env:
  REGISTRY: ghcr.io # GitHub Container Registry
  IMAGE_NAME: ${{ github.repository }} # github.repository as <account>/<repo>


jobs:
  publish-docker-image:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      # QEMU is a generic and open source machine & userspace emulator and virtualizer.
      # Buildx is a Docker CLI plugin for extended build capabilities with BuildKit.
      # It provides the same functionality as docker build with many new features.
      # The docker/setup-qemu-action action sets up QEMU for use in GitHub Actions.
      # The docker/setup-buildx-action action sets up Docker Buildx for use in GitHub Actions.
      # The docker/build-push-action action builds and pushes Docker images to a registry.            
      - name: convert IMAGE_NAME to lowercase, setup QEMU and Buildx
        run: |
          echo "REGISTRY=${REGISTRY}" >> $GITHUB_ENV
          echo "IMAGE_NAME=${IMAGE_NAME,,}" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64, linux/arm64/v8
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            API_KEY=
            ${{ secrets.API_KEY }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true
